version: '2'

services:
  rabbitmq:
     image: rabbitmq:latest
     container_name: rabbitmq
     ports:
        - "15672:15672"
     expose:
        - "5672"
     networks:
        - quiz-hub

  psql-ms:
    image: 'postgres:latest'
    container_name: psql-ms
    expose:
      - "5432"
    networks:
        - quiz-hub
    volumes:
      - ./db-entrypoint.sql:/docker-entrypoint-initdb.d/docker_postgres_init.sql
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=admin


  config-ms:
    image: 'config-ms:latest'
    container_name: config-ms
    build:
      context: ./config-server
    networks:
      - quiz-hub
    environment:
      - CONFIG_REPO_USERNAME=quizhub
      - CONFIG_REPO_PASSWORD=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
      - CONFIG_REPO_URI=https://github.com/quizhub/quizhub-cloud-config-docker
      

  eureka:
    image: 'eureka:latest'
    container_name: eureka
    build:
      context: ./eureka
    networks:
      - quiz-hub
    depends_on:
      - psql-ms
      - rabbitmq


  system-events-service:
    image: 'system-events-service:latest'
    container_name: system-events-service
    build:
      context: ./system-events
    networks:
      - quiz-hub
    environment:
      - CONFIG_SERVER_URI=optional:configserver:http://config-ms:8888
    depends_on:
      - config-ms
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 5

        
  person-service:
    image: 'person-service:latest'
    container_name: person-service
    build:
      context: ./person-microservice
    networks:
      - quiz-hub
    environment:
      - CONFIG_SERVER_URI=optional:configserver:http://config-ms:8888
    depends_on:
      - system-events-service
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 5


  property-service:
    image: 'property-service:latest'
    container_name: property-service
    build:
      context: ./property-microservice
    networks:
      - quiz-hub
    environment:
      - CONFIG_SERVER_URI=optional:configserver:http://config-ms:8888
    depends_on:
      - person-service
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 5

      
  quiz-service:
    image: 'quiz-service:latest'
    container_name: quiz-service
    build:
      context: ./quiz-microservice
    networks:
      - quiz-hub
    environment:
      - CONFIG_SERVER_URI=optional:configserver:http://config-ms:8888
    depends_on:
      - property-service
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 5


  tournament-service:
    image: 'tournament-service:latest'
    container_name: tournament-service
    build:
      context: ./tournament-microservice
    networks:
      - quiz-hub
    environment:
      - CONFIG_SERVER_URI=optional:configserver:http://config-ms:8888
    depends_on:
      - quiz-service
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 5


  api-gateway-service:
    image: 'api-gateway-service:latest'
    container_name: api-gateway-service
    build:
      context: ./api-gateway
    networks:
      - quiz-hub
    environment:
      - EUREKA_URI=http://eureka:8761/eureka
    depends_on:
      - tournament-service
    ports:
      - "8086:8086"
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 5


  react:
    image: 'react-c:latest'
    container_name: react-c
    build:
      context: ./frontend
    ports:
      - "3000:3000"
    networks:
      - quiz-hub
    environment:
      - REACT_APP_HOST_URL=http://localhost:8086
    depends_on:
      - api-gateway-service
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 5


networks:
  quiz-hub:
    driver: bridge
